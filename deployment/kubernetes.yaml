---
apiVersion: v1
kind: Service
metadata:
  name: restfulapi
  labels:
    app.kubernetes.io/name: restfulapi
spec:
  type: LoadBalancer
  ports:
    - port: 8010
      protocol: TCP
      targetPort: 8080
  selector:
    app: restfulapi
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: restfulapi
  labels:
    app.kubernetes.io/name: restfulapi
spec:
  selector:
    matchLabels:
      app: restfulapi
  template:
    metadata:
      labels:
        app: restfulapi
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: restfulapi
        image: restfulapi:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
          - name: MONGODB_URI
            value: "mongodb://restfulapi-mongo:27017/"
          - name: JAEGER_ENDPOINT
            value: "grpc://restfulapi-jaeger-otlp-grpc:4317"
        resources: {}
      volumes:
        - name: prometheus-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: restfulapi-mongo
  labels:
    app: restfulapi-mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app: restfulapi-mongo
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: restfulapi-mongo
spec:
  serviceName: restfulapi-mongo
  replicas: 1
  selector:
    matchLabels:
      app: restfulapi-mongo
  template:
    metadata:
      labels:
        app: restfulapi-mongo
    spec:
      containers:
        - name: mongo
          image: mongo:6.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGODB_URI
              value: "mongodb://restfulapi-mongo:27017/"
            - name: ENVIRONMENT
              value: "prod"
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 1s
      evaluation_interval: 1s
    scrape_configs:
    - job_name: 'restfulapi'
      static_configs:
      - targets: ['restfulapi.default.svc.cluster.local:8010']
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']
---
apiVersion: v1
kind: Service
metadata:
  name: restfulapi-prometheus
  labels:
    app: restfulapi-prometheus
spec:
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: web
  selector:
    app: restfulapi-prometheus
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restfulapi-prometheus
  labels:
    app: restfulapi-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restfulapi-prometheus
  template:
    metadata:
      labels:
        app: restfulapi-prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--web.enable-lifecycle"
        ports:
        - containerPort: 9090
          name: web
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        resources:
          requests:
            memory: "512Mi"
            cpu: "0.2"
          limits:
            memory: "1Gi"
            cpu: "0.5"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: restfulapi-jaeger
  labels:
    app: restfulapi-jaeger
spec:
  ports:
  - name: ui
    port: 16686
    targetPort: 16686
  selector:
    app: restfulapi-jaeger
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: restfulapi-jaeger-otlp-grpc
  labels:
    app: restfulapi-jaeger
spec:
  ports:
    - name: otlp
      port: 4317
      targetPort: 4317
  selector:
    app: restfulapi-jaeger
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restfulapi-jaeger
  labels:
    app: restfulapi-jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restfulapi-jaeger
  template:
    metadata:
      labels:
        app: restfulapi-jaeger
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:latest
        ports:
        - containerPort: 16686
        - containerPort: 4317
        env:
          - name: COLLECTOR_OTLP_ENABLED
            value: "true"
